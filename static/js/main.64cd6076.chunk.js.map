{"version":3,"sources":["containers/Home.js","containers/Programming.js","App.js","serviceWorker.js","index.js"],"names":["Home","app","useRef","content","tl","TimelineLite","delay","buttons","useEffect","headlineFirst","children","headlineSecond","nextSibling","headlineThird","contentone","contenttwo","contentthree","contentfour","contentfive","contentsix","conotentseven","buttonsone","buttonstwo","buttonsthree","TweenMax","to","css","visibility","staggerFrom","y","ease","Power3","easeOut","from","opacity","className","ref","el","type","onClick","e","preventDefault","window","location","href","Programming","Component","App","exact","path","component","render","Boolean","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.64cd6076.chunk.js","sourcesContent":["import React, {useRef, useEffect} from 'react';\nimport {TweenMax, TimelineLite, Power3} from 'gsap';\nimport './Home.scss';\n\n//Assets\n// import arrow from '../images/arrow-right.svg';\n// import imgGirl from './images/girl.webp';\n// import imgBoy from './images/boy.webp';\n\n\nfunction Home() {\n  \n    let app = useRef(null);\n    // let images = useRef(null);\n    let content = useRef(null);\n    let tl = new TimelineLite({delay: .3})\n    let buttons = useRef(null);\n\n    useEffect(() => {\n\n        //IMAGES VARS\n        // const girlImage = images.firstElementChild;\n        // const boyImage = images.lastElementChild;\n\n        // Content VARS\n        const headlineFirst = content.children[0].children[0];\n        const headlineSecond = headlineFirst.nextSibling;\n        const headlineThird = headlineSecond.nextSibling;\n        const contentone = content.children[1];\n        const contenttwo = content.children[2];\n        const contentthree = content.children[3];\n        const contentfour = content.children[4];\n        const contentfive = content.children[5];\n        const contentsix = content.children[6];\n        const conotentseven = content.children[7];\n\n        const buttonsone  = buttons.children[0];\n        const buttonstwo  = buttons.children[1];\n        const buttonsthree  = buttons.children[2];\n        \n\n      //Removing flash\n      TweenMax.to(app, 0, {css: {visibility: 'visibile'}})\n\n      // //Images Animation\n      // tl.from(girlImage, 1.2, {y: 1280, ease: Power3.easeOut}, 'Start')\n      //   .from(girlImage.firstElementChild, 2, {scale: 1.6, ease: Power3.easeOut}, .2)\n      //   .from(boyImage, 1.2, {y: 1280, ease: Power3.easeOut}, .2)\n      //   .from(boyImage.firstElementChild, 2, {scale: 1.6, ease: Power3.easeOut}, .1)\n      \n\n      //Content Animation\n      tl.staggerFrom([headlineFirst.children, headlineSecond.children, headlineThird.children], 1, {\n        y: 44,\n        ease: Power3.easeOut, delay: .2\n      }, .10, 'Start')\n      .from(contentone, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.4)\n      .from(contenttwo, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.5)\n      .from(contentthree, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.6)\n      .from(contentfour, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.7)\n      .from(contentfive, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.8)\n      .from(contentsix, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.9)\n      .from(conotentseven, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 2.0)\n      .from(buttonsone, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 0.6)\n      .from(buttonstwo, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.0)\n      .from(buttonsthree, 1, {y: 20, opacity: 0, ease: Power3.easeOut}, 1.4);\n    \n    }, [tl])\n\n  return (\n    <div className=\"hero\" ref={el => app = el}>\n      <div className=\"container\">\n        <div className=\"hero-inner\">\n          <div className=\"hero-content\">\n            <div className=\"hero-content-inner\" ref={el => content = el}>\n                <h1>\n                <div className=\"hero-content-line\">\n                    <div className=\"hero-content-line-inner\"> Maiuran Loganathan </div>\n                </div>\n                <div className=\"hero-content-line\">\n                    <div className=\"hero-content-line-inner-second\"> Effectively building solutions to </div>  \n                </div>\n                <div className=\"hero-content-line\">\n                    <div className=\"hero-content-line-inner-second\"> meaningful challenges </div>\n                </div>\n                </h1>\n                <p> Full stack: MERN stack, Firebase + MongoDb, React, Gsap </p>\n                <p> Mobile: React Native + Swift </p>\n                <p> UI/UX: Figma, Sketch </p>\n                <br/>\n                \n                </div>\n            </div>\n        <div className=\"hero-content\"  >\n        <div className=\"hero-content-inner\" ref={el => buttons = el}>\n            <div className=\"btn-row\">\n                <button className=\"explore-button\" type=\"button\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          window.location.href='/coding';\n                          }}> Coding\n                </button>\n              </div>\n              <div className=\"btn-row\">\n                <button className=\"explore-button\" type=\"button\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          window.location.href='/startups';\n                          }}> CV stuff\n                </button>\n              </div>\n              <div className=\"btn-row\">\n                <button className=\"explore-button\" type=\"button\"\n                        onClick={(e) => {\n                          e.preventDefault();\n                          window.location.href='/coding';\n                          }}> My story\n                </button>\n              </div>\n        </div>\n        </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;","import React, { Component } from 'react'\n\nclass Programming extends Component {\n    render() {\n        return (\n            <div>\n                <h1> Progamming </h1>\n            </div>\n        )\n    }\n}\n\nexport default Programming\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\n\n\n//containers\nimport Home from './containers/Home';\nimport Programming from './containers/Programming';\n\nclass App extends Component {\n\n\n    render(){\n\n    \n    return (\n      \n\n        \n          <Router>\n              <Switch>\n                \n                <Route exact path=\"/\" component={Home} />\n                <Route path=\"/coding\" component={Programming} />\n                <Route render={\n                  () => <h3>Oops, we couldn't find this page. Try reverting to Home, homie </h3>\n                }/>\n              </Switch>\n          </Router>\n\n      );\n    }\n  }\n\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}